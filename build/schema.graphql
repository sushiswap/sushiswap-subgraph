type MasterChef @entity {
  id: ID!
  totalAllocPoint: BigInt!
}

type MasterChefPool @entity {
  id: ID!
  balance: BigInt!
  lpToken: Bytes!
  allocPoint: BigInt!
  lastRewardBlock: BigInt!
  accSushiPerShare: BigInt!
  exchange: Int! # 0: Uniswap, 1: SushiSwap
  addedAt: Int!
}

type MasterChefPoolData @entity {
  id: ID!
  pool: MasterChefPool!
  timestamp: Int!
  balance: BigInt!
  allocShare: BigInt!
  exchange: Int! # 0: Uniswap, 1: SushiSwap
}

type Timelock @entity {
  id: ID!
  description: String
  value: BigInt!
  eta: BigInt!
  functionName: String!
  data: String!
  targetAddress: String!
  isCancelled: Boolean!
  isExecuted: Boolean!
  expiresAt: BigInt!
  createdAt: BigInt!
  cancelledAt: BigInt
  executedAt: BigInt
  createdTx: String!
  cancelledTx: String
  executedTx: String
}
